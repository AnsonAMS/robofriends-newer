{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAeeA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACI,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCgBDK,EArBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIlB,OACE,8BACIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACI,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCCNC,EAZG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACE,qBAAKV,UAAU,MAAf,SACA,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,eACZC,SAAUH,OCCHI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCmBJC,E,kDArBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG3B,WACI,OAAIG,KAAKJ,MAAMC,SACL,4DAEHG,KAAKX,MAAMK,a,GAhBIQ,aCgDbC,G,wDA1Cb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,QAE1CC,QAAQC,IAAIJ,EAAMC,OAAOC,QAhB3B,EAAKX,MAAQ,CACTlB,OAAQ,GACRK,YAAa,IAJL,E,qDAQhB,WAAqB,IAAD,OAChB2B,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAK,EAAKb,SAAS,CAAEvB,OAAQoC,S,oBAU1C,WAAU,IAAD,EACyBd,KAAKJ,MAA7BlB,EADD,EACCA,OAAQK,EADT,EACSA,YACVgC,EAAiBrC,EAAOsC,QAAO,SAAAC,GACnC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASpC,EAAYmC,kBAErD,OAAQxC,EAAO0C,OAGX,sBAAK9C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQqC,WAP5B,6C,GA5BUb,cCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1BZ,M","file":"static/js/main.cb9ea2a0.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = ({ name, email, id }) => {\n  return (\n      <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n        <img alt='robots' src= {`https://robohash.org/${id}?200x200`} />\n        <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n      </div>\n  );\n}\n\nexport default Card;","import React from 'react';  \nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {  \n  // if (true) {\n  //   throw new Error('NOOOOOOO!!')\n  // \n  return (\n    <div>\n      { robots.map((user, i) => {\n          return (\n              <Card\n                key={i} \n                id={robots[i].id} \n                name={robots[i].name} \n                email={robots[i].email} \n                />\n            ); \n        }) \n      }  \n    </div>   \n    ); \n}  \n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n    return (\n      <div className='pa2'>\n      <input \n        className='pa3 ba b--green bg-lightest-blue'\n        type='search' \n        placeholder='Search Robot' \n        onChange={searchChange}\n      />\n      </div>\n    );\n}\nexport default SearchBox; ","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({hasError: true })\n  }\n\n  render() {\n      if (this.state.hasError) {\n          return<h1>Oooopps. Thats is not good</h1>\n      }\n      return this.props.children \n  }\n}\n\n\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n        robots: [],\n        searchfield: ''\n    }\n  }\n\ncomponentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users =>  this.setState({ robots: users}));\n    \n}\n\n  onSearchChange = (event) => {\n      this.setState({ searchfield: event.target.value })\n     \n      console.log(event.target.value);\n  }\n\n    render() {\n      const { robots, searchfield } = this.state;\n      const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ? \n        <h1>Loading</h1> : \n        (\n            <div className='tc'>\n              <h1 className='f2'>Robofriends</h1>\n              <SearchBox searchChange={this.onSearchChange} />\n              <Scroll>\n                <ErrorBoundary>\n                  <CardList robots={filteredRobots} />\n                </ErrorBoundary>\n              </Scroll>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}